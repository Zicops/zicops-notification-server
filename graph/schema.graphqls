input NotificationInput {
  title: String!
  body: String!
  user_id: [String]!
}

type Notification {
  statuscode: String!
  error: String
  user_id: String
}

type FirestoreMessage {
  title: String!
  body: String!
  created_at: Int!
  user_id: String!
  message_id: String!
  is_read: Boolean!
  link: String!
  lsp_id: String!
}

type FirestoreData {
  title: String!
  body: String!
  created_at: Int!
  user_id: String!
  is_read: Boolean!
  message_id: String!
  link: String
  lsp_id: String!
}

input FirestoreDataInput {
  title: String!
  body: String!
  is_read: Boolean!
  message_id: String!
}

type PaginatedNotifications {
  messages: [FirestoreMessage]!
  nextPageSnapShot: String
}

type TagsData {
  user_lsp_id: String
  user_id: String
  tags: [String]
  lsp_id: String
}

type PaginatedTagsData {
  data: [TagsData]
  prevPageSnapShot: ID
}

input UserDetails {
  user_id: String
  user_lsp_id: String
}

input ClassRoomFlagsInput {
  id: String
  is_classroom_started: Boolean
  is_participants_present: Boolean
  is_ad_displayed: Boolean
  is_break: Boolean
  is_moderator_joined: Boolean
  is_trainer_joined: Boolean
  ad_video_url: String
  is_microphone_enabled: Boolean
  is_video_sharing_enabled: Boolean
  is_screen_sharing_enabled: Boolean
  is_chat_enabled: Boolean
  is_qa_enabled: Boolean
  is_classroom_ended: String
  quiz: [String]
} 

type ClassRoomFlags {
  id: String
  is_classroom_started: Boolean
  is_participants_present: Boolean
  is_ad_displayed: Boolean
  is_break: Boolean
  is_moderator_joined: Boolean
  is_trainer_joined: Boolean
  ad_video_url: String
  is_microphone_enabled: Boolean
  is_video_sharing_enabled: Boolean
  is_screen_sharing_enabled: Boolean
  is_chat_enabled: Boolean
  is_qa_enabled: Boolean
  is_classroom_ended: String
  quiz:[String]
}

input Messages {
  parent_id: String
  responses: Int
  body: String
  meeting_id: String
  user_id: String
  time: Int
  chat_type: String
}

input PollsInput{
  id: String
  poll_name: String
  meeting_id: String
  course_id: String
  topic_id: String
  question: String
  options: [String]
  poll_option_ids: [String]
  status: String
}

type Polls{
  id: String
  poll_name: String
  meeting_id: String
  course_id: String
  topic_id: String
  question: String
  options: [String]
  poll_option_ids: [String]
  status: String
  created_at: Int
  updated_at: Int
  created_by: String
  updated_by: String
}

type PollResults{
  poll_id: String
  question: String
  poll_responses: [PollResponse]
}

input PollResponseInput {
  id: String
  poll_id: String
  option: String
  response: String
  user_id: String
}

type PollResponse {
  id: String
  poll_id: String
  response: String
  user_id: String
  option: String
  created_at: Int
  updated_at: Int
  created_by: String
  updated_by: String
}

input PublishedQuiz {
  id: String
  quizId: String
}

type Mutation {
  sendNotificationWithLink(notification: NotificationInput!, link: String!): [Notification]!
  addToFirestore(message: [FirestoreDataInput]!):String!
  sendEmail(to_: [String]!, sender_name:String!, user_name:[String], body: String!, template_id: String!): [String!]
  getFCMToken: String!
  Auth_tokens: String!
  sendEmail_UserId(user_id: [String]!, sender_name:String!, user_name:[String], body: String!, template_id: String!): [String!]
  addUserTags(ids: [UserDetails], tags:[String]): Boolean
  addClassroomFlags(input: ClassRoomFlagsInput): ClassRoomFlags
  addMessagesMeet(message: Messages): Boolean
  addPoll(input: PollsInput): Polls
  updatePoll(input: PollsInput): Polls
  updatePollOptions(input: PollResponseInput): PollResponse
  addQuizToClassroomFlags(input: PublishedQuiz): Boolean
}

type Query {
  getAll(prevPageSnapShot: String!, pageSize: Int!, is_read: Boolean): PaginatedNotifications
  getAllPaginatedNotifications(pageIndex: Int!, pageSize: Int!, is_read: Boolean): [FirestoreMessage]
  getUserLspIdTags(user_lsp_id: [String]): [TagsData]
  getTagUsers(prevPageSnapShot: String, pageSize: Int, tags:[String]): PaginatedTagsData
  getPollResults(poll_id: String): PollResults
}